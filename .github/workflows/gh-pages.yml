name: Build and Publish Docusaurus site (with daily art)
name: Build and Publish Docusaurus site (with daily art)
name: Build and Publish Docusaurus site (with daily art)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  smoke:
    name: Runner smoke test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print versions
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          python --version || true
          node --version || true
          npm --version || true

  build-and-deploy:
    name: Build site and deploy to GitHub Pages
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Pillow (for PNG output)
        run: |
          python -m pip install --upgrade pip
          python -m pip install pillow

      - name: Generate daily art
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          mkdir -p website/static/img/daily
          YMD=$(date -u +%Y%m%d)
          FILE="website/static/img/daily/astonish_${YMD}_${GITHUB_RUN_ID}.png"
          echo "Generating art to $FILE"
          python astonish.py --mode flow --width 1280 --height 720 --steps 400 --particles 20000 --seed $GITHUB_RUN_NUMBER --png "$FILE"
          echo "Generated: $FILE"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd website
          npm ci

      - name: Build site
        run: |
          cd website
          npm run build

      - name: Add CNAME (optional)
        if: ${{ secrets.GH_PAGES_CNAME != '' }}
        run: |
          echo "${{ secrets.GH_PAGES_CNAME }}" > website/build/CNAME

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
